Table: Employees

+-------------+------+
| Column Name | Type |
+-------------+------+
| emp_id      | int  |
| event_day   | date |
| in_time     | int  |
| out_time    | int  |
+-------------+------+
(emp_id, event_day, in_time) is the primary key of this table.
The table shows the employees' entries and exits in an office.
event_day is the day at which this event happened, in_time is the minute at which the employee entered the office, and out_time is the minute at which they left the office.
in_time and out_time are between 1 and 1440.
It is guaranteed that no two events on the same day intersect in time, and in_time < out_time.
Write an SQL query to calculate the total time in minutes spent by each employee on each day at the office. Note that within one day, an employee can enter and leave more than once. The time spent in the office for a single entry is out_time - in_time.

Return the result table in any order.

# We are looking for: employee_id, event_date, and the total time each employee was at the event 
# To find total time, we use aggregate function sum(time out - time in) 
# we can either use normal or window function to write this query 
Option 1: 
select distinct emp_id, event_day, sum(out_time - in_time) as total_time 
from employees 
group by emp_id, event_day 

Option 2: using window function 
select distinct emp_id, event_day, sum(out_time - in_time) over (partition by emp__id, event_day order by emp_id) as total_time 
from employees

# partition by is acting as group by to categorize id and event_day 
# also using distinct emp_id so we don't get duplicate results 

Option 3: Using cte and window function - faster run time

with cte as (
select emp_id, 
        event_day as "day", 
        sum(out_time - in_time) over (partition by emp_id, event_day order by event_day) as "total_time"
from employees 
)
select distinct emp_id, 
        day, 
        total_time
from cte

















